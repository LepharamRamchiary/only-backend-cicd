name: Deploy-to-EC2-Production

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy Node.js app to EC2 (production)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the files
        uses: actions/checkout@v2

      - name: Deploy project files to EC2
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY_P }}
          REMOTE_HOST: ${{ secrets.EC2_HOST_P }}
          REMOTE_USER: ${{ secrets.EC2_USER_P }}
          TARGET: ${{ secrets.EC2_PATH_P }}

      - name: Setup and start application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST_P }}
          username: ${{ secrets.EC2_USER_P }}
          key: ${{ secrets.EC2_SSH_KEY_P }}
          script: |
            set -e
            
            # Define variables
            APP_NAME="nodeapp"
            APP_PATH="${{ secrets.EC2_PATH_P }}"
            
            echo "Starting deployment..."
            echo "App Path: $APP_PATH"
            
            # Update system
            sudo apt-get update -y
            
            # Install Node.js if not present
            if ! command -v node >/dev/null 2>&1; then
                curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
                sudo apt-get install -y nodejs
            fi
            
            # Install nginx if not present
            if ! command -v nginx >/dev/null 2>&1; then
                sudo apt-get install -y nginx
            fi
            
            # Install dependencies
            cd "$APP_PATH"
            npm install --production
            
            # Stop existing services
            sudo systemctl stop $APP_NAME || true
            
            # Create systemd service
            sudo tee /etc/systemd/system/$APP_NAME.service > /dev/null <<EOF
[Unit]
Description=Node.js Production App
After=network.target

[Service]
Type=simple
ExecStart=/usr/bin/node $APP_PATH/src/index.js
Restart=always
RestartSec=5
User=${{ secrets.EC2_USER_P }}
Group=${{ secrets.EC2_USER_P }}
Environment=NODE_ENV=production
Environment=PORT=8000
WorkingDirectory=$APP_PATH
StandardOutput=journal
StandardError=journal

[Install]
WantedBy=multi-user.target
EOF
            
            # Start Node.js service
            sudo systemctl daemon-reload
            sudo systemctl enable $APP_NAME
            sudo systemctl start $APP_NAME
            
            # Check if service started
            sleep 5
            if systemctl is-active --quiet $APP_NAME; then
                echo "Node.js service started successfully"
            else
                echo "Service failed to start"
                sudo systemctl status $APP_NAME --no-pager
                exit 1
            fi
            
            # Configure nginx
            sudo mkdir -p /etc/nginx/sites-available /etc/nginx/sites-enabled
            sudo rm -f /etc/nginx/sites-enabled/default
            
            # Create nginx configuration
            sudo tee /etc/nginx/sites-available/$APP_NAME > /dev/null <<EOF
server {
    listen 80;
    server_name _;
    
    location / {
        proxy_pass http://localhost:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        proxy_cache_bypass \$http_upgrade;
    }
}
EOF
            
            # Enable nginx site
            sudo ln -sf /etc/nginx/sites-available/$APP_NAME /etc/nginx/sites-enabled/
            
            # Test and start nginx
            if sudo nginx -t; then
                sudo systemctl enable nginx
                sudo systemctl restart nginx
                echo "Nginx configured and started"
            else
                echo "Nginx configuration failed"
                exit 1
            fi
            
            # Final status
            echo "Deployment completed successfully!"
            echo "App is running at: http://${{ secrets.EC2_HOST_P }}/"