name: Push-to-EC2-Staging

on:
  push:
    branches:
      - staging

jobs:
  deploy:
    name: Deploy Node.js app to EC2 (staging)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the files
        uses: actions/checkout@v2

      - name: Deploy project files to EC2
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          REMOTE_HOST: ${{ secrets.EC2_HOST }}
          REMOTE_USER: ${{ secrets.EC2_USER }}
          TARGET: ${{ secrets.EC2_PATH }}

      - name: Executing remote ssh commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Install dependencies
            sudo apt-get update -y
            sudo apt-get install -y nodejs npm git nginx

            # Go to app directory
            cd ${{ secrets.EC2_PATH }}
            npm install 

            # Create systemd service file for Node app
            sudo bash -c 'cat > /etc/systemd/system/nodeapp.service <<EOF
            [Unit]
            Description=Node.js App
            After=network.target

            [Service]
            ExecStart=/usr/bin/node ${{ secrets.EC2_PATH }}/src/index.js
            Restart=always
            User=${{ secrets.EC2_USER }}
            Environment=PORT=8000
            WorkingDirectory=${{ secrets.EC2_PATH }}

            [Install]
            WantedBy=multi-user.target
            EOF'

            # Reload systemd and start service
            sudo systemctl daemon-reload
            sudo systemctl enable nodeapp
            sudo systemctl restart nodeapp

            # Configure Nginx reverse proxy
            sudo bash -c 'cat > /etc/nginx/sites-available/nodeapp <<EOF
            server {
                listen 80;
                server_name _;

                location / {
                    proxy_pass http://localhost:8000;
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade \$http_upgrade;
                    proxy_set_header Connection "upgrade";
                    proxy_set_header Host \$host;
                    proxy_cache_bypass \$http_upgrade;
                }
            }
            EOF'

            # Enable site and restart Nginx
            sudo ln -sf /etc/nginx/sites-available/nodeapp /etc/nginx/sites-enabled/
            sudo nginx -t
            sudo systemctl restart nginx
